name: Release to Production

on:
  push:
    branches:
    - main

permissions:
    id-token: write
    
env:
  WEBAPP_NAME: apitestcole2
  RESOURCE_GROUP: appsvc_linux_centralus_basic
  SLOT_NAME: staging  # Create a slot on your web app called "staging"
  NODE_VERSION: '16.16'
  AZURE_WEBAPP_PACKAGE_PATH: '.'

jobs:
  build:
    name: Create Production Build Artifact
    runs-on: ubuntu-latest
    steps:
    - name: Check Out Repo
      uses: actions/checkout@v1

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install Node Dependencies
      run: |
        npm install

    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v2
      with:
        name: gettapevents-prod
        path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
    
  deploy-to-stage:
    name: Deploy to Staging
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: 'Staging'
      url: ${{ steps.deploy-to-stage.outputs.webapp-url }}
    env: 
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    steps:
    - name: 'Az CLI login using OIDC'
      uses: azure/login@v1
      with:
          client-id: ${{ env.AZURE_CLIENT_ID }}
          tenant-id: ${{ env.AZURE_TENANT_ID }}
          subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}

    - name: Download artifact from build job
      uses: actions/download-artifact@v2
      with:
        name: gettapevents-prod
    
    - name: Deploy to Staging Slot
      uses: azure/webapps-deploy@v1
      id: deploy-to-webapp
      with: 
        app-name: ${{ env.WEBAPP_NAME }}
        slot-name:  ${{ env.SLOT_NAME }}
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

  release-to-prod:
    name: Release to prod
    needs: deploy-to-stage
    runs-on: ubuntu-latest
    environment:
      name: 'Production'
      url: 'https://${{ env.WEBAPP_NAME }}.azurewebsites.net/'

    steps:
    - name: 'Az CLI login using OIDC'
      uses: azure/login@v1
      with:
          client-id: ${{ env.AZURE_CLIENT_ID }}
          tenant-id: ${{ env.AZURE_TENANT_ID }}
          subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}

    - name: Swap slots
      run: az webapp deployment slot swap -s ${{ env.SLOT_NAME }} -n ${{ env.WEBAPP_NAME }} -g ${{ env.RESOURCE_GROUP }}