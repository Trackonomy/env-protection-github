name: Deploy PR to staging env

on:
  pull_request:
    branches:
    - main

concurrency: ci-${{ github.event.number }}
permissions:
    pull-requests: write
    id-token: write
    contents: read

env:
  WEBAPP_NAME: apitestcole2
  RESOURCE_GROUP: appsvc_linux_centralus_basic
  SLOT_NAME: pr-${{ github.event.pull_request.title }}
  AZURE_WEBAPP_PACKAGE_PATH: '.'
  GITHUB_TEMP_ENV: '${{ github.event.number }}'
  GITHUB_PR_TITLE: ${{ github.event.pull_request.title }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Check Out Repo
      uses: actions/checkout@v1

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install Node Dependencies
      run: |
        npm install

    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v2
      with:
        name: gettapevents-server
        path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

  
  set-up-test-env:
    name: Create test env
    runs-on: ubuntu-latest
    outputs:
      token_creation_status: ${{ steps.OIDCTOKEN.status }}
    steps:
    - name: 'Az CLI login using OIDC'
      uses: azure/login@v1
      with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Create Azure OIDC Federated Token for Temporary PR ENV in App Registartion
      id: OIDCTOKEN
      run: | 
        az ad app federated-credential create --id 0636d7e0-ff77-459e-ae19-4bce311b1df9 --parameters \
        "{\"name\":\"PR-$GITHUB_PR_TITLE\",
        \"issuer\":\"https://token.actions.githubusercontent.com\",
        \"subject\":\"repo:Trackonomy/env-protection-github:environment:PR-$GITHUB_PR_TITLE\",
        \"description\":\"TempToken for $SLOT_NAME\",
        \"audiences\": [ \"api://AzureADTokenExchange\" ]
        }" 
      continue-on-error: true

    # - name: Check on failures
    #   if: set-up-test-env.steps.OIDCTOKEN.status == failure() || job.steps.world.status == failure()
    #   run: exit 1
    - name: Create slot on staging site
      run: az webapp deployment slot create --resource-group $RESOURCE_GROUP  --name $WEBAPP_NAME --slot $SLOT_NAME
